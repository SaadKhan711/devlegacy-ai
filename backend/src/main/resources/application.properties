# ===============================================
# DATABASE CONFIGURATION (PostgreSQL)
# ===============================================
spring.datasource.url=jdbc:postgresql://localhost:5432/devlegacy_db
spring.datasource.username=postgres
spring.datasource.password=pass
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Use "update" for development. It updates the DB schema to match your entities.
spring.jpa.hibernate.ddl-auto=update

# ===============================================
# GEMINI API KEY
# ===============================================
gemini.api.key=AIzaSyDI2np5e46s7oA_3wE-K1fsRuXUY7boNPY

# ===============================================
# SECURITY CONFIGURATION (Auth0 - RS256)
# ===============================================
# This tells Spring Security where to get the public keys to verify the token signature.
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://dev-h5dpnpgh5uu708zs.us.auth0.com/.well-known/jwks.json

# This tells Spring Security who the valid token issuer is. It must match the 'iss' claim in the JWT.
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-h5dpnpgh5uu708zs.us.auth0.com/

# This tells Spring Security that the 'aud' (audience) claim in the JWT MUST be this value.
spring.security.oauth2.resourceserver.jwt.audiences=https://api.devlegacy.ai

